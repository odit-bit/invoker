// Code generated by MockGen. DO NOT EDIT.
// Source: ./crawler/proc_graph_updater.go
//
// Generated by this command:
//
//	mockgen -source=./crawler/proc_graph_updater.go -destination=./crawler/mocks/mock_graph_updater.go
//
// Package mock_crawler is a generated GoMock package.
package mock_crawler

import (
	reflect "reflect"
	time "time"

	uuid "github.com/google/uuid"
	graph "github.com/odit-bit/invoker/linkgraph/graph"
	gomock "go.uber.org/mock/gomock"
)

// MockGraphUpdater is a mock of GraphUpdater interface.
type MockGraphUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockGraphUpdaterMockRecorder
}

// MockGraphUpdaterMockRecorder is the mock recorder for MockGraphUpdater.
type MockGraphUpdaterMockRecorder struct {
	mock *MockGraphUpdater
}

// NewMockGraphUpdater creates a new mock instance.
func NewMockGraphUpdater(ctrl *gomock.Controller) *MockGraphUpdater {
	mock := &MockGraphUpdater{ctrl: ctrl}
	mock.recorder = &MockGraphUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGraphUpdater) EXPECT() *MockGraphUpdaterMockRecorder {
	return m.recorder
}

// RemoveStaleEdges mocks base method.
func (m *MockGraphUpdater) RemoveStaleEdges(fromID uuid.UUID, updatedBefore time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveStaleEdges", fromID, updatedBefore)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveStaleEdges indicates an expected call of RemoveStaleEdges.
func (mr *MockGraphUpdaterMockRecorder) RemoveStaleEdges(fromID, updatedBefore any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveStaleEdges", reflect.TypeOf((*MockGraphUpdater)(nil).RemoveStaleEdges), fromID, updatedBefore)
}

// UpsertEdge mocks base method.
func (m *MockGraphUpdater) UpsertEdge(edge *graph.Edge) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertEdge", edge)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpsertEdge indicates an expected call of UpsertEdge.
func (mr *MockGraphUpdaterMockRecorder) UpsertEdge(edge any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertEdge", reflect.TypeOf((*MockGraphUpdater)(nil).UpsertEdge), edge)
}

// UpsertLink mocks base method.
func (m *MockGraphUpdater) UpsertLink(link *graph.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertLink", link)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpsertLink indicates an expected call of UpsertLink.
func (mr *MockGraphUpdaterMockRecorder) UpsertLink(link any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertLink", reflect.TypeOf((*MockGraphUpdater)(nil).UpsertLink), link)
}
